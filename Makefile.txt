# MAKEFILE ECO3M - This is a Makefile for the precompiling of the code (mode INI)
#
# KEYS OF PRECOMPILING (to be put in the CPPFLAGS section:
#------------------------------------------------
# * CALC     : key to obligatory use in the files Makefile.calc; it corresponds to the computing mode of the model
# * COUPL    : key to use the biogeochemical model coupled to a physical model (COUPL)
# * INI      : key to obligatory use in the file Makefile, to launch the initialisation mode (mode INI). It enables to create the model via the generation of the call.inc file
# * M0D-NCOUPL : key to only use in the non-coupled mode (NCOUPL) and 0D mode
# * M3D-NCOUPL : key to be only use in the non-coupled mode (NCOUPL) but with a 3D (or 1D) geometry
# * NCOUPL   : key to use the model in the non-coupled mode (NCOUPL)
# * MODTEST : key to launch the model in TEST mode (TEST) => intermediates displays
# * RESBIO_A : outputs of the resuls in the ASCII format
# * RESBIO_N : output of the results in the NETCDF format
# * VAR_GLOB: key to add in case of using supplementary global variables for the biogeochemical model
#
# Type of compiler
FC            = ifort

# Linker
LINKER        = ifort

# Preprocessor
CPP           = cpp -nostdinc
#
# FLAGS of precompiling
#------------------------
# 1/ Case for using in the COUPL mode
#CPPFLAGS      = -P -C -DINI -DRESBIO_A -DCOUPL  -DMODTEST -I./BIO/INCLUDE/
# 2/ Case for using in the NCOUPL mode (0D mode) 
CPPFLAGS      = -P -C -DINI -DRESBIO_A -DNCOUPL  -DM0D-NCOUPL  -I./BIO/INCLUDE/
# Case for using in the NCOUPL and TEST modes
#CPPFLAGS      = -P -C -DINI -DRESBIO_A -DNCOUPL  -DM0D-NCOUPL -DMODTEST -I./BIO/INCLUDE/
# 3/ Case for using in the NCOUPL mode and a multi-dimension geometry without physical model
#CPPFLAGS      = -P -C -DINI -DRESBIO_A -DNCOUPL  -DM3D-NCOUPL -DMODTEST -I./BIO/INCLUDE/

# INCLUDE Directories
INCDIR        = -I./BIO/INCLUDE/ -I./BIO/MODULES/

# FLAG of compiling
COMP_OPTS     = ${INCDIR} ${MODDIR}
#
PROGRAM	      = ./eco3M_ini.exe

# NETCDF LIBRARIES
# for the local cluster (to be adapted according to the local requirements)
LIBS          =  ./BIO/LIB/libionetcdfPC.a \
		./BIO/LIB/libnetcdf_351.a
 
# DIRECTORIES
SRCBIO	      = ./BIO/
SRC           = ./BIO/petitf/
OBJ           = ./BIO/OBJETS/

# MODULES
MODULS	      = ${SRCBIO}mod_longchain.f90 \
		${SRCBIO}modules.f90 \
		${SRCBIO}mod_fchain.f90 \
		${SRCBIO}mod_process.f90 
#
# In case of IFORT use :
 MODDIR        = -module ./BIO/MODULES/

#
OBJS          = ${OBJ}mod_longchain.o \
		${OBJ}modules.o \
		${OBJ}mod_fchain.o \
		${OBJ}mod_process.o \
		coupleur.o \
		${OBJ}main_bio.o \
		${OBJ}sub_affiche.o \
		${OBJ}sub_call_tab.o \
		${OBJ}sub_calc_prelim.o \
		${OBJ}sub_fin.o \
		${OBJ}sub_init.o \
		${OBJ}sub_init_mod.o \
		${OBJ}sub_var_ini.o \
                ${OBJ}sub_resbio_ascii.o
#		${OBJ}sub_resbio_netcdf.o
#
#
all:		 ${PROGRAM} 
#
# PROGRAM CREATION - LINKS EDITING
#
modules:
	${FC} ${COMP_OPTS} -c ${MODULS} ${MODDIR}
	@echo "end of modules creation"
#
${PROGRAM}:	${OBJS}
	@echo  "CREATION ${PROGRAM} ... "
	${LINKER} ${INCDIR} ${LDFLAG} ${OBJS} ${LIBS}  -o  ${PROGRAM} 
	@echo "COMPILING - LINKS TERMINATED"
	${PROGRAM} 
	@echo "INI Mode TERMINATED"
	rm -f  ${OBJ}* coupleur.o
# Case non-coupled Eco3M
	make -f Makefile.calc.noncouple
# Case Eco3M coupled to a physioal model
#	make -f Makefile.calc.couple

#
clean:;		rm -f  ${SRCBIO}modules.f90 coupleur_ini.f90 coupleur_calc.f90 coupleur.o ${OBJ}* ${SRC}* ./MODULES/*  ${PROGRAM} *.mod *.inc *.exe
#
#
# COMPILING STEP

# 
coupleur.o: coupleur.F90 	
	${CPP}  ${CPPFLAGS} coupleur.F90 coupleur_ini.f90	
	${FC}	${COMP_OPTS} -c coupleur_ini.f90 -o coupleur.o

${OBJ}main_bio.o: ${SRCBIO}main_bio.F90 
	${CPP}  ${CPPFLAGS} ${SRCBIO}main_bio.F90 ${SRC}main_bio_ini.f90	
	${FC}	${COMP_OPTS} -c ${SRC}main_bio_ini.f90 -o ${OBJ}main_bio.o 

${OBJ}mod_longchain.o: ${SRCBIO}mod_longchain.f90 
	${FC}	${COMP_OPTS} -c ${SRCBIO}mod_longchain.f90 -o ${OBJ}mod_longchain.o
# 
${OBJ}mod_fchain.o: ${SRCBIO}mod_fchain.f90 	
	${FC}	${COMP_OPTS} -c ${SRCBIO}mod_fchain.f90 -o ${OBJ}mod_fchain.o
# 
${OBJ}mod_process.o: ${SRCBIO}mod_process.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}mod_process.F90 ${SRC}mod_process.f90	
	${FC}	${COMP_OPTS} -c ${SRC}mod_process.f90 -o ${OBJ}mod_process.o
# 
${OBJ}modules.o: ${SRCBIO}modules.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}modules.F90 ${SRCBIO}modules.f90	
	${FC}	${COMP_OPTS} -c ${SRCBIO}modules.f90 -o ${OBJ}modules.o
# 
${OBJ}sub_affiche.o: ${SRCBIO}sub_affiche.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}sub_affiche.F90 ${SRC}sub_affiche.f90	
	${FC}	${COMP_OPTS} -c ${SRC}sub_affiche.f90 -o ${OBJ}sub_affiche.o
# 
${OBJ}sub_calc_prelim.o: ${SRCBIO}sub_calc_prelim.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}sub_calc_prelim.F90 ${SRC}sub_calc_prelim.f90	
	${FC}	${COMP_OPTS} -c ${SRC}sub_calc_prelim.f90 -o ${OBJ}sub_calc_prelim.o
# 
 ${OBJ}sub_call_tab.o: ${SRCBIO}sub_call_tab.f90 	
	${FC}	${COMP_OPTS} -c ${SRCBIO}sub_call_tab.f90 -o ${OBJ}sub_call_tab.o
# 
${OBJ}sub_fin.o: ${SRCBIO}sub_fin.f90 	
	${FC}	${COMP_OPTS} -c ${SRCBIO}sub_fin.f90 -o ${OBJ}sub_fin.o
# 
${OBJ}sub_init.o: ${SRCBIO}sub_init.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}sub_init.F90 ${SRC}sub_init_ini.f90	
	${FC}	${COMP_OPTS} -c ${SRC}sub_init_ini.f90 -o ${OBJ}sub_init.o
# 
${OBJ}sub_init_mod.o: ${SRCBIO}sub_init_mod.f90 	
	${FC}	${COMP_OPTS} -c ${SRCBIO}sub_init_mod.f90 -o ${OBJ}sub_init_mod.o
# 
#${OBJ}sub_phys_ini.o: ${SRCBIO}sub_phys_ini.f90 	
#	${FC}	${COMP_OPTS} -c ${SRCBIO}sub_phys_ini.f90 -o ${OBJ}sub_phys_ini.o
# 
${OBJ}sub_var_ini.o: ${SRCBIO}sub_var_ini.F90 	
	${CPP}  ${CPPFLAGS} ${SRCBIO}sub_var_ini.F90 ${SRC}sub_var_ini.f90	
	${FC}	${COMP_OPTS} -c ${SRC}sub_var_ini.f90 -o ${OBJ}sub_var_ini.o
#	
${OBJ}sub_resbio_ascii.o: ${SRCBIO}sub_resbio_ascii.F90 
	${CPP}  ${CPPFLAGS} ${SRCBIO}sub_resbio_ascii.F90 ${SRC}sub_resbio_ascii.f90	
	${FC}   ${COMP_OPTS} -c ${SRC}sub_resbio_ascii.f90 -o ${OBJ}sub_resbio_ascii.o
# 
#${OBJ}sub_resbio_netcdf.o: ${SRCBIO}sub_resbio_netcdf.f90 
#	${FC}   ${COMP_OPTS} -c ${SRCBIO}sub_resbio_netcdf.f90 -o ${OBJ}sub_resbio_netcdf.o
